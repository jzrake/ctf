#!/usr/bin/env python

import jinja2
import markdown


class MathJaxPattern(markdown.inlinepatterns.Pattern):
    def __init__(self):
        markdown.inlinepatterns.Pattern.__init__(self, r'(?<!\\)(\$\$?)(.+?)\2')

    def handleMatch(self, m):
        node = markdown.util.etree.Element('mathjax')
        node.text = markdown.util.AtomicString(m.group(2) + m.group(3) + m.group(2))
        return node

class MathJaxExtension(markdown.Extension):
    def extendMarkdown(self, md, md_globals):
        md.inlinePatterns.add('mathjax', MathJaxPattern(), '<escape')


loader = jinja2.FileSystemLoader('_layouts')
env = jinja2.Environment(loader=loader)
layout = env.get_template('layout.html')
extensions = ['tables', MathJaxExtension()]

def read_file(fname):
    py = ""
    mode = None
    sections = [ ]
    for line in open(fname):
        if mode == 'section-header':
            if line.startswith('#+'):
                py +=  line.replace('#+', '')
            else:
                if py:
                    sections[-1].update(eval(py))
                    py = ""
                mode = None
        elif line.startswith('#'):
            hl = line.count('#')
            sections.append({'md': "",
                             'figures_header': "<h%d> &zwnj; </h%d>" % (hl, hl)})
            mode = 'section-header'
            sections[-1]['md'] += line
        elif sections:
            sections[-1]['md'] += line
    return sections


def render_to_file(page, tag):
    sections = read_file("_sections/%s.md" % page)

    for section in sections:
        section['content'] = markdown.markdown(section['md'],
                                               extensions=extensions)
    html = layout.render(sections=sections, title=page, page_tag=tag)
    html = html.replace('<table>', '<table class="tftable">')
    outf = open('%s.html' % page, 'w')
    outf.write(html)

render_to_file('index', 'magnetized, relativistic astrophysics')
render_to_file('test-page', 'test problems page')
render_to_file('doc-page', 'code use documentation (coming soon)')
